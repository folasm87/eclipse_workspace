package com.multivision.ehrms.business;

import java.io.Serializable;

import javax.persistence.*;
import javax.servlet.ServletRequest;
import javax.servlet.http.HttpServletRequest;

import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;


@Entity
@Table(name="Tasks")
public class Task implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;


	@Id
	@GeneratedValue
	@Column(name="task_id")
	private long taskId;
	
	
	@Column
	private String name;
	
	@Column
	private String duration;
	
	
	@ManyToOne
	@JoinColumn(name="project", referencedColumnName="id")
	private Project project;


	public long getTaskId() {
		return taskId;
	}

	public void setTaskId(long taskId) {
		this.taskId = taskId;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDuration() {
		return duration;
	}

	public void setDuration(String duration) {
		this.duration = duration;
	}

	public Project getProject() {
		return project;
	}

	public void setProject(Project project) {
		this.project = project;
	}
	
	public void reset(ActionMapping mapping, ServletRequest request) {

	}

	public ActionErrors validate(ActionMapping mapping,
			HttpServletRequest request) {
		ActionErrors errors = new ActionErrors();
		ActionMessage message;
		if (this.empId == null || this.empId.trim().length() == 0) {
			message = new ActionMessage("employee.id.mandatory");
			errors.add("empid", message);
		}
		if (this.name == null || this.name.trim().length() == 0) {
			message = new ActionMessage("employee.name.mandatory");
			errors.add("name", message);
		}
		if (this.dob == null || this.dob.trim().length() == 0) {
			message = new ActionMessage("employee.dob.mandatory");
			errors.add("dob", message);
		}
		if (this.joinDate == null || this.joinDate.trim().length() == 0) {
			message = new ActionMessage("employee.joindate.mandatory");
			errors.add("joinDate", message);
		}
		return errors;
	}


	
	
	
	
	
}
